version: '3.9'
services:
  frontend:
    container_name: frontend
    build: ./client 
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    restart: 'always'
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
    networks:
      - app-network
  backend:
    build: ./server
    container_name: backend
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    restart: 'always'
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
    networks:
      - app-network
    environment:
      - MONGO_URI=mongodb://db:27017/Ebyrt-to-do
  db:
    image: mongo
    container_name: db
    ports:
      - 27017:27017
    restart: 'always'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo db:27017/test --quiet # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
    networks:
      - app-network


networks:
    app-network:
        name: ebyrt-network
        driver: bridge